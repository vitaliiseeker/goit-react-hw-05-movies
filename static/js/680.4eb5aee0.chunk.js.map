{"version":3,"file":"static/js/680.4eb5aee0.chunk.js","mappings":"oNAGaA,EAAOC,EAAAA,GAAAA,GAAH,yCAIJC,EAAOD,EAAAA,GAAAA,GAAH,6CAIJE,GAAaF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,mH,SCRVI,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,+BACE,SAACR,EAAD,UACGM,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,SAACT,EAAD,WACE,SAACC,EAAD,CAAYS,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMP,GAAhD,SACGI,KAFMD,EADD,OAUnB,C,qMCfDK,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAM,mCAECC,EAAiB,yCAAG,0GACRF,EAAAA,EAAAA,GAAM,sBAAuB,CAClDG,OAAQ,CACNC,QAASH,KAHkB,cACzBI,EADyB,yBAMxBA,EAASC,KAAKC,SANU,2CAAH,qDASjBC,EAAY,yCAAG,WAAOC,GAAP,6FACHT,EAAAA,EAAAA,GAAM,gBAAiB,CAC5CG,OAAQ,CACNC,QAASH,EACTQ,MAAOA,KAJe,cACpBJ,EADoB,yBAOnBA,EAASC,KAAKC,SAPK,2CAAH,sDAUZG,EAAe,yCAAG,WAAOC,GAAP,6FACNX,EAAAA,EAAAA,GAAM,UAAD,OAAWW,GAAW,CAChDR,OAAQ,CACNC,QAASH,KAHgB,cACvBI,EADuB,yBAMtBA,EAASC,MANa,2CAAH,sDASfM,EAAsB,yCAAG,WAAOD,GAAP,6FACbX,EAAAA,EAAAA,GAAM,UAAD,OAAWW,EAAX,YAA8B,CACxDR,OAAQ,CACNC,QAASH,KAHuB,cAC9BI,EAD8B,yBAM7BA,EAASC,KAAKO,MANe,2CAAH,sDAStBC,EAAsB,yCAAG,WAAOH,GAAP,6FACbX,EAAAA,EAAAA,GAAM,UAAD,OAAWW,EAAX,YAA8B,CACxDR,OAAQ,CACNC,QAASH,KAHuB,cAC9BI,EAD8B,yBAM7BA,EAASC,KAAKC,SANe,2CAAH,sDASnCC,EAAaO,UAAY,CACvBN,MAAOO,IAAAA,OAAAA,YAGTN,EAAgBK,UAAY,CAC1BJ,QAASK,IAAAA,OAAAA,YAGXJ,EAAuBG,UAAY,CACjCJ,QAASK,IAAAA,OAAAA,YAGXF,EAAuBC,UAAY,CACjCJ,QAASK,IAAAA,OAAAA,W,uFCjCX,UA3BiB,WAEf,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAO1B,EAAP,KAAe2B,EAAf,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAAkCH,EAAAA,EAAAA,WAAS,GAA3C,eAAOI,EAAP,KAAkBC,EAAlB,KAUA,OARAC,EAAAA,EAAAA,YAAU,WACRD,GAAa,IACbpB,EAAAA,EAAAA,MACGsB,KAAKN,GACLO,MAAML,GACNM,SAAQ,kBAAMJ,GAAa,EAAnB,GACZ,GAAE,KAGD,gCACGH,IAAS,iCACTE,IAAa,SAAC,IAAD,IACb9B,IACC,iCACE,4CACA,SAAC,IAAD,CAAYA,OAAQA,SAI7B,C","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/utils/fetchApi.js","pages/HomePage/HomePage.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nexport const List = styled.ul`\r\n padding: 20px;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n  line-height: 1.3;\r\n`;\r\n\r\nexport const LinkStyled = styled(Link)`\r\n  transition: color var(animation);\r\n  \r\n  &:hover,\r\n  &:focus {\r\n    color: #8000ff;\r\n }\r\n`;\r\n\r\n","import { useLocation } from 'react-router-dom';\r\nimport { List, Item, LinkStyled } from './MoviesList.styled';\r\n\r\nexport const MoviesList = ({ movies }) => {\r\n  const location = useLocation();\r\n  return (\r\n    <>\r\n      <List>\r\n        {movies.map(({ id, title }) => (\r\n          <Item key={id}>\r\n            <LinkStyled to={`/movies/${id}`} state={{ from: location }}>\r\n              {title}\r\n            </LinkStyled>\r\n          </Item>\r\n        ))}\r\n      </List>\r\n    </>\r\n  )\r\n}","import axios from \"axios\";\r\nimport PropTypes from 'prop-types';\r\n\r\naxios.defaults.baseURL = \"https://api.themoviedb.org/3\";\r\nconst KEY = \"e5b22da478d64a4856b7de5bb232688f\";\r\n\r\nexport const getTrendingMovies = async () => {\r\n  const response = await axios(`/trending/movie/day`, {\r\n    params: {\r\n      api_key: KEY,\r\n    }\r\n  });\r\n  return response.data.results;\r\n}\r\n\r\nexport const searchMovies = async (query) => {\r\n  const response = await axios(`/search/movie`, {\r\n    params: {\r\n      api_key: KEY,\r\n      query: query,\r\n    }\r\n  });\r\n  return response.data.results;\r\n}\r\n\r\nexport const getMovieDetails = async (movieId) => {\r\n  const response = await axios(`/movie/${movieId}`, {\r\n    params: {\r\n      api_key: KEY,\r\n    }\r\n  });\r\n  return response.data;\r\n}\r\n\r\nexport const getMovieDetailsCredits = async (movieId) => {\r\n  const response = await axios(`/movie/${movieId}/credits`, {\r\n    params: {\r\n      api_key: KEY,\r\n    }\r\n  });\r\n  return response.data.cast;\r\n}\r\n\r\nexport const getMovieDetailsReviews = async (movieId) => {\r\n  const response = await axios(`/movie/${movieId}/reviews`, {\r\n    params: {\r\n      api_key: KEY,\r\n    }\r\n  });\r\n  return response.data.results;\r\n}\r\n\r\nsearchMovies.propTypes = {\r\n  query: PropTypes.string.isRequired,\r\n}\r\n\r\ngetMovieDetails.propTypes = {\r\n  movieId: PropTypes.string.isRequired,\r\n}\r\n\r\ngetMovieDetailsCredits.propTypes = {\r\n  movieId: PropTypes.string.isRequired,\r\n}\r\n\r\ngetMovieDetailsReviews.propTypes = {\r\n  movieId: PropTypes.string.isRequired,\r\n}","import { useState, useEffect } from 'react';\r\nimport { Loader } from 'components/Loader/Loader';\r\nimport { getTrendingMovies } from 'components/utils/fetchApi';\r\nimport { MoviesList } from \"components/MoviesList/MoviesList\";\r\n\r\nconst HomePage = () => {\r\n\r\n  const [movies, setMovies] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    getTrendingMovies()\r\n      .then(setMovies)\r\n      .catch(setError)\r\n      .finally(() => setIsLoading(false));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {error && <p>Oops!</p>}\r\n      {isLoading && <Loader />}\r\n      {movies &&\r\n        <>\r\n          <h2>Trending today</h2>\r\n          <MoviesList movies={movies} />\r\n        </>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n"],"names":["List","styled","Item","LinkStyled","Link","MoviesList","movies","location","useLocation","map","id","title","to","state","from","axios","KEY","getTrendingMovies","params","api_key","response","data","results","searchMovies","query","getMovieDetails","movieId","getMovieDetailsCredits","cast","getMovieDetailsReviews","propTypes","PropTypes","useState","setMovies","error","setError","isLoading","setIsLoading","useEffect","then","catch","finally"],"sourceRoot":""}