{"version":3,"file":"static/js/499.d20e5b07.chunk.js","mappings":"qLAEaA,E,OAAOC,GAAAA,EAAH,qG,SCCJC,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC7B,OAAO,SAACH,EAAD,UAAOG,GACf,C,qMCFDC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAM,mCAECC,EAAiB,yCAAG,0GACRF,EAAAA,EAAAA,GAAM,sBAAuB,CAClDG,OAAQ,CACNC,QAASH,KAHkB,cACzBI,EADyB,OAM/BC,QAAQC,IAAIF,EAASG,KAAKC,SANK,kBAOxBJ,EAASG,KAAKC,SAPU,2CAAH,qDAUjBC,EAAY,yCAAG,WAAOC,GAAP,6FACHX,EAAAA,EAAAA,GAAM,gBAAiB,CAC5CG,OAAQ,CACNC,QAASH,EACTU,MAAOA,KAJe,cACpBN,EADoB,yBAOnBA,EAASG,KAAKC,SAPK,2CAAH,sDAUZG,EAAe,yCAAG,WAAOC,GAAP,6FACNb,EAAAA,EAAAA,GAAM,UAAD,OAAWa,GAAW,CAChDV,OAAQ,CACNC,QAASH,KAHgB,cACvBI,EADuB,yBAMtBA,EAASG,MANa,2CAAH,sDASfM,EAAsB,yCAAG,WAAOD,GAAP,6FACbb,EAAAA,EAAAA,GAAM,UAAD,OAAWa,EAAX,YAA8B,CACxDV,OAAQ,CACNC,QAASH,KAHuB,cAC9BI,EAD8B,yBAM7BA,EAASG,KAAKO,MANe,2CAAH,sDAStBC,EAAsB,yCAAG,WAAOH,GAAP,6FACbb,EAAAA,EAAAA,GAAM,UAAD,OAAWa,EAAX,YAA8B,CACxDV,OAAQ,CACNC,QAASH,KAHuB,cAC9BI,EAD8B,yBAM7BA,EAASG,KAAKC,SANe,2CAAH,sDASnCC,EAAaO,UAAY,CACvBN,MAAOO,IAAAA,OAAAA,YAGTN,EAAgBK,UAAY,CAC1BJ,QAASK,IAAAA,OAAAA,YAGXJ,EAAuBG,UAAY,CACjCJ,QAASK,IAAAA,OAAAA,YAGXF,EAAuBC,UAAY,CACjCJ,QAASK,IAAAA,OAAAA,W,qKChEEC,EAAOtB,EAAAA,GAAAA,GAAH,oDAIJuB,EAAOvB,EAAAA,GAAAA,GAAH,kF,SC2CjB,EA1CgB,WACd,OAA8BwB,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KACQd,GAAYe,EAAAA,EAAAA,MAAZf,SAERgB,EAAAA,EAAAA,YAAU,WACJhB,GACFiB,GAGH,GAAE,CAACjB,IAEJ,IAAMiB,EAAU,yCAAG,yGAEfH,GAAa,GAFE,UAGQX,EAAAA,EAAAA,IAAuBH,GAH/B,OAGTR,EAHS,OAIfkB,EAAWlB,GAJI,gDAMfoB,EAAS,SANM,yBAQfE,GAAa,GARE,4EAAH,qDAYhB,OACE,gCACGH,IAAS,iCACTE,IAAa,SAACK,EAAA,EAAD,KACd,SAACZ,EAAD,UACGG,EAAQU,OAAS,EACfV,EAAQW,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,UAAChB,EAAD,YACE,wBAAKe,KACL,uBAAIC,MAFKF,EADA,KAKZ,SAACpC,EAAA,EAAD,CAAcC,QAAS,iDAIjC,C","sources":["components/Notification/Notification.styled.jsx","components/Notification/Notification.jsx","components/utils/fetchApi.js","pages/Reviews/Reviews.styled.jsx","pages/Reviews/Reviews.jsx"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Text = styled.p`\r\npadding: 15px 25px;\r\nfont-size: 20px;\r\nfont-style: italic;\r\ncolor: #ff8080;\r\n`;","import { Text } from \"./Notification.styled\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const Notification = ({ message }) => {\r\n  return <Text>{message}</Text>\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n}\r\n","import axios from \"axios\";\r\nimport PropTypes from 'prop-types';\r\n\r\naxios.defaults.baseURL = \"https://api.themoviedb.org/3\";\r\nconst KEY = \"e5b22da478d64a4856b7de5bb232688f\";\r\n\r\nexport const getTrendingMovies = async () => {\r\n  const response = await axios(`/trending/movie/day`, {\r\n    params: {\r\n      api_key: KEY,\r\n    }\r\n  });\r\n  console.log(response.data.results);\r\n  return response.data.results;\r\n}\r\n\r\nexport const searchMovies = async (query) => {\r\n  const response = await axios(`/search/movie`, {\r\n    params: {\r\n      api_key: KEY,\r\n      query: query,\r\n    }\r\n  });\r\n  return response.data.results;\r\n}\r\n\r\nexport const getMovieDetails = async (movieId) => {\r\n  const response = await axios(`/movie/${movieId}`, {\r\n    params: {\r\n      api_key: KEY,\r\n    }\r\n  });\r\n  return response.data;\r\n}\r\n\r\nexport const getMovieDetailsCredits = async (movieId) => {\r\n  const response = await axios(`/movie/${movieId}/credits`, {\r\n    params: {\r\n      api_key: KEY,\r\n    }\r\n  });\r\n  return response.data.cast;\r\n}\r\n\r\nexport const getMovieDetailsReviews = async (movieId) => {\r\n  const response = await axios(`/movie/${movieId}/reviews`, {\r\n    params: {\r\n      api_key: KEY,\r\n    }\r\n  });\r\n  return response.data.results;\r\n}\r\n\r\nsearchMovies.propTypes = {\r\n  query: PropTypes.string.isRequired,\r\n}\r\n\r\ngetMovieDetails.propTypes = {\r\n  movieId: PropTypes.string.isRequired,\r\n}\r\n\r\ngetMovieDetailsCredits.propTypes = {\r\n  movieId: PropTypes.string.isRequired,\r\n}\r\n\r\ngetMovieDetailsReviews.propTypes = {\r\n  movieId: PropTypes.string.isRequired,\r\n}","import styled from 'styled-components';\r\n\r\nexport const List = styled.ul`\r\n /* padding-left: 20px; */\r\n`;\r\n\r\nexport const Item = styled.li`\r\n display: inline-block;\r\n margin: 10px;\r\n padding: 10px;\r\n`;\r\n","import { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getMovieDetailsReviews } from 'components/utils/fetchApi';\r\nimport { Notification } from \"components/Notification/Notification\";\r\nimport { Loader } from 'components/Loader/Loader';\r\nimport { List, Item } from './Reviews.styled';\r\n\r\nconst Reviews = () => {\r\n  const [reviews, setReviews] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { movieId } = useParams();\r\n\r\n  useEffect(() => {\r\n    if (movieId) {\r\n      getReviews();\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [movieId]);\r\n\r\n  const getReviews = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const response = await getMovieDetailsReviews(movieId);\r\n      setReviews(response);\r\n    } catch (error) {\r\n      setError(\"Error\");\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {error && <p>Oops!</p>}\r\n      {isLoading && <Loader />}\r\n      <List>\r\n        {reviews.length > 0 ?\r\n          (reviews.map(({ id, author, content }) => (\r\n            <Item key={id}>\r\n              <h4>{author}</h4>\r\n              <p>{content}</p>\r\n            </Item>))) :\r\n          (<Notification message={\"We don't have any reviews for this movie\"} />)}\r\n      </List>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Reviews;\r\n"],"names":["Text","styled","Notification","message","axios","KEY","getTrendingMovies","params","api_key","response","console","log","data","results","searchMovies","query","getMovieDetails","movieId","getMovieDetailsCredits","cast","getMovieDetailsReviews","propTypes","PropTypes","List","Item","useState","reviews","setReviews","error","setError","isLoading","setIsLoading","useParams","useEffect","getReviews","Loader","length","map","id","author","content"],"sourceRoot":""}