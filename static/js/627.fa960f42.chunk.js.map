{"version":3,"file":"static/js/627.fa960f42.chunk.js","mappings":"qTAGAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAM,mCAECC,EAAiB,yCAAG,0GACRF,EAAAA,EAAAA,GAAM,sBAAuB,CAClDG,OAAQ,CACNC,QAASH,KAHkB,cACzBI,EADyB,yBAMxBA,EAASC,KAAKC,SANU,2CAAH,qDASjBC,EAAY,yCAAG,WAAOC,GAAP,6FACHT,EAAAA,EAAAA,GAAM,gBAAiB,CAC5CG,OAAQ,CACNC,QAASH,EACTQ,MAAOA,KAJe,cACpBJ,EADoB,yBAOnBA,EAASC,KAAKC,SAPK,2CAAH,sDAUZG,EAAe,yCAAG,WAAOC,GAAP,6FACNX,EAAAA,EAAAA,GAAM,UAAD,OAAWW,GAAW,CAChDR,OAAQ,CACNC,QAASH,KAHgB,cACvBI,EADuB,yBAMtBA,EAASC,MANa,2CAAH,sDASfM,EAAsB,yCAAG,WAAOD,GAAP,6FACbX,EAAAA,EAAAA,GAAM,UAAD,OAAWW,EAAX,YAA8B,CACxDR,OAAQ,CACNC,QAASH,KAHuB,cAC9BI,EAD8B,yBAM7BA,EAASC,KAAKO,MANe,2CAAH,sDAStBC,EAAsB,yCAAG,WAAOH,GAAP,6FACbX,EAAAA,EAAAA,GAAM,UAAD,OAAWW,EAAX,YAA8B,CACxDR,OAAQ,CACNC,QAASH,KAHuB,cAC9BI,EAD8B,yBAM7BA,EAASC,KAAKC,SANe,2CAAH,sDASnCC,EAAaO,UAAY,CACvBN,MAAOO,IAAAA,OAAAA,YAGTN,EAAgBK,UAAY,CAC1BJ,QAASK,IAAAA,OAAAA,YAGXJ,EAAuBG,UAAY,CACjCJ,QAASK,IAAAA,OAAAA,YAGXF,EAAuBC,UAAY,CACjCJ,QAASK,IAAAA,OAAAA,W,4JC/DEC,EAAOC,EAAAA,GAAAA,GAAH,kLASJC,EAAOD,EAAAA,GAAAA,GAAH,gH,0DC8CjB,EAhDa,WACX,OAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOP,EAAP,KAAaQ,EAAb,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAAkCH,EAAAA,EAAAA,WAAS,GAA3C,eAAOI,EAAP,KAAkBC,EAAlB,KACQd,GAAYe,EAAAA,EAAAA,MAAZf,SAERgB,EAAAA,EAAAA,YAAU,WACJhB,GACFiB,GAGH,GAAE,CAACjB,IAEJ,IAAMiB,EAAO,yCAAG,yGAEZH,GAAa,GAFD,UAGWb,EAAAA,EAAAA,IAAuBD,GAHlC,OAGNN,EAHM,OAKZgB,EAAQhB,GALI,gDAOZkB,EAAS,SAPG,yBASZE,GAAa,GATD,4EAAH,qDAab,OACE,gCACGH,IAAS,iCACTE,IAAa,SAACK,EAAA,EAAD,KACd,SAACZ,EAAD,UACGJ,EAAKiB,KAAI,gBAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,KAAMC,EAApB,EAAoBA,aAAcC,EAAlC,EAAkCA,UAAlC,OACR,UAACf,EAAD,YACG,gBAAKgB,IAAKF,EAAY,yCAAqCA,GAAiBG,EAAKC,IAAKL,EAAMM,MAAM,MAAMC,OAAO,SAIhH,iCACE,wBAAKP,KACL,uBAAIE,SAPGH,EADH,QAejB,C","sources":["components/utils/fetchApi.js","pages/Cast/Cast.styled.jsx","pages/Cast/Cast.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport PropTypes from 'prop-types';\r\n\r\naxios.defaults.baseURL = \"https://api.themoviedb.org/3\";\r\nconst KEY = \"e5b22da478d64a4856b7de5bb232688f\";\r\n\r\nexport const getTrendingMovies = async () => {\r\n  const response = await axios(`/trending/movie/day`, {\r\n    params: {\r\n      api_key: KEY,\r\n    }\r\n  });\r\n  return response.data.results;\r\n}\r\n\r\nexport const searchMovies = async (query) => {\r\n  const response = await axios(`/search/movie`, {\r\n    params: {\r\n      api_key: KEY,\r\n      query: query,\r\n    }\r\n  });\r\n  return response.data.results;\r\n}\r\n\r\nexport const getMovieDetails = async (movieId) => {\r\n  const response = await axios(`/movie/${movieId}`, {\r\n    params: {\r\n      api_key: KEY,\r\n    }\r\n  });\r\n  return response.data;\r\n}\r\n\r\nexport const getMovieDetailsCredits = async (movieId) => {\r\n  const response = await axios(`/movie/${movieId}/credits`, {\r\n    params: {\r\n      api_key: KEY,\r\n    }\r\n  });\r\n  return response.data.cast;\r\n}\r\n\r\nexport const getMovieDetailsReviews = async (movieId) => {\r\n  const response = await axios(`/movie/${movieId}/reviews`, {\r\n    params: {\r\n      api_key: KEY,\r\n    }\r\n  });\r\n  return response.data.results;\r\n}\r\n\r\nsearchMovies.propTypes = {\r\n  query: PropTypes.string.isRequired,\r\n}\r\n\r\ngetMovieDetails.propTypes = {\r\n  movieId: PropTypes.string.isRequired,\r\n}\r\n\r\ngetMovieDetailsCredits.propTypes = {\r\n  movieId: PropTypes.string.isRequired,\r\n}\r\n\r\ngetMovieDetailsReviews.propTypes = {\r\n  movieId: PropTypes.string.isRequired,\r\n}","import styled from 'styled-components';\r\n\r\nexport const List = styled.ul`\r\ndisplay: grid;\r\nmax-width: calc(100vw - 48px);\r\ngrid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\r\ngrid-auto-flow: 260px;\r\ngrid-gap: 16px;\r\n\r\n`;\r\n\r\nexport const Item = styled.li`\r\n display: flex;\r\n flex-direction: column;\r\n gap: 8px;\r\n margin: 10px;\r\n padding: 10px;\r\n`;\r\n","import { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Loader } from 'components/Loader/Loader';\r\nimport { getMovieDetailsCredits } from 'components/utils/fetchApi';\r\nimport { List, Item } from './Cast.styled';\r\nimport Img from \"../../images/uk.jpg\";\r\n// import { ReactComponent as Svg } from \"../../images/uk.svg\";\r\n\r\n\r\nconst Cast = () => {\r\n  const [cast, setCast] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { movieId } = useParams();\r\n\r\n  useEffect(() => {\r\n    if (movieId) {\r\n      getCast();\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [movieId]);\r\n\r\n  const getCast = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const response = await getMovieDetailsCredits(movieId);\r\n\r\n      setCast(response);\r\n    } catch (error) {\r\n      setError(\"Error\");\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {error && <p>Oops!</p>}\r\n      {isLoading && <Loader />}\r\n      <List>\r\n        {cast.map(({ credit_id, name, profile_path, character }) => (\r\n          <Item key={credit_id}>\r\n            {<img src={profile_path ? `https://image.tmdb.org/t/p/w500${profile_path}` : Img} alt={name} width=\"180\" height=\"270\" />}\r\n            {/* {profile_path ?\r\n                (<img src={`https://image.tmdb.org/t/p/w500${profile_path}`} alt={name} width=\"120\" />)\r\n                : <Svg width=\"120\" height=\"180\" />} */}\r\n            <>\r\n              <h3>{name}</h3>\r\n              <p>{character}</p>\r\n            </>\r\n          </Item>\r\n        ))}\r\n      </List>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cast;\r\n"],"names":["axios","KEY","getTrendingMovies","params","api_key","response","data","results","searchMovies","query","getMovieDetails","movieId","getMovieDetailsCredits","cast","getMovieDetailsReviews","propTypes","PropTypes","List","styled","Item","useState","setCast","error","setError","isLoading","setIsLoading","useParams","useEffect","getCast","Loader","map","credit_id","name","profile_path","character","src","Img","alt","width","height"],"sourceRoot":""}